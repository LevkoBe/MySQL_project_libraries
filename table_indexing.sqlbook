-- SQLBook: Markup
### Dropping indexings
-- SQLBook: Code
DROP INDEX idx_publisher_id ON books;
DROP INDEX idx_customer_id ON loans;
DROP INDEX idx_author_name ON authors;
DROP INDEX idx_customer_name ON customers;
DROP INDEX idx_book_title ON books;
-- SQLBook: Markup
### Creating indices
-- SQLBook: Code
CREATE INDEX idx_publisher_id ON books (publisher_id);
CREATE INDEX idx_customer_id ON loans (customer_id);
CREATE INDEX idx_author_name ON authors (name);
CREATE INDEX idx_customer_name ON customers (name);
CREATE INDEX idx_book_title ON books (title);
-- SQLBook: Markup
---
### Timing
---
-- SQLBook: Code
SET @start_time = NOW();
SELECT 
    b.title AS book_title,
    CASE 
        WHEN l.return_date IS NOT NULL OR lb.book_id IS NULL THEN 'Available'
        ELSE '-'
    END AS availability,
    CASE 
        WHEN l.return_date IS NOT NULL THEN '-'
        ELSE COALESCE(c.name, '-')
    END AS borrower_name
        FROM  books b
        LEFT JOIN  loan_books lb ON b.id = lb.book_id
        LEFT JOIN  loans l ON lb.loan_id = l.id
        LEFT JOIN customers c ON l.customer_id = c.id;
        
SET @end_time = NOW();

SELECT TIMEDIFF(@end_time, @start_time) AS execution_time;

-- SQLBook: Code
SELECT 
    b.title AS book_title,
    CASE 
        WHEN l.return_date IS NOT NULL OR lb.book_id IS NULL THEN 'Available'
        ELSE '-'
    END AS availability,
    CASE 
        WHEN l.return_date IS NOT NULL THEN '-'
        ELSE COALESCE(c.name, '-')
    END AS borrower_name
        FROM  books b
        LEFT JOIN  loan_books lb ON b.id = lb.book_id
        LEFT JOIN  loans l ON lb.loan_id = l.id
        LEFT JOIN customers c ON l.customer_id = c.id;